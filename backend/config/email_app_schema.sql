CREATE DATABASE IF NOT EXISTS email_app;
USE email_app;

-- USERS TABLE
CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  firstName VARCHAR(100),
  lastName VARCHAR(100),
  email VARCHAR(255) NOT NULL UNIQUE,
  password_hash TEXT NOT NULL,
  profilePicture VARCHAR(255) DEFAULT 'https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y',
  role ENUM('user', 'admin') DEFAULT 'user',
  isVerified BOOLEAN DEFAULT TRUE,
  isBlocked BOOLEAN DEFAULT FALSE,
  isApproved BOOLEAN DEFAULT TRUE,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  lastLogin TIMESTAMP NULL,
  resetToken VARCHAR(255),
  resetTokenExpires DATETIME
);

-- Insert Admin  password is Admin@123
INSERT INTO users (firstName, lastName, email, password_hash, role, isVerified, isBlocked, isApproved)
VALUES (
  'Admin',
  'User',
  'admin1234@example.com',
  '$2a$10$u9UG6oFv9akFwC9jhvC6VuXtfAcRmt9VRkEJyw1v8LyqDcv0zRCRe',
  'admin',
  TRUE,
  FALSE,
  TRUE
);

-- EMAILS TABLE
CREATE TABLE IF NOT EXISTS emails (
  id INT AUTO_INCREMENT PRIMARY KEY,
  senderId INT NOT NULL,
  recipientId INT NOT NULL,
  subject TEXT,
  body TEXT,
  folder VARCHAR(50) DEFAULT 'inbox',
  labels JSON DEFAULT NULL,
  attachments JSON DEFAULT NULL,
  isRead BOOLEAN DEFAULT FALSE,
  isStarred BOOLEAN DEFAULT FALSE,
  isTrash BOOLEAN DEFAULT FALSE,
  isDeleted BOOLEAN DEFAULT FALSE,
  status VARCHAR(20) DEFAULT 'pending',
  error_message TEXT,
  to_email VARCHAR(255),
  from_email VARCHAR(255),
  type VARCHAR(50),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (senderId) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (recipientId) REFERENCES users(id) ON DELETE CASCADE
);

-- ATTACHMENTS TABLE
CREATE TABLE IF NOT EXISTS attachments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  emailId INT NOT NULL,
  filePath VARCHAR(255),
  fileName VARCHAR(255),
  mimeType VARCHAR(100),
  uploadedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (emailId) REFERENCES emails(id) ON DELETE CASCADE
);

-- REFRESH TOKENS TABLE
CREATE TABLE IF NOT EXISTS refresh_tokens (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  token TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  expires_at TIMESTAMP NULL,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  INDEX(token)
);

-- OTP TABLE
CREATE TABLE IF NOT EXISTS otps (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  otp CHAR(64) NOT NULL, -- SHA-256 hash
  expires_at DATETIME NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  INDEX(email)
);

-- OTP LOGS TABLE
CREATE TABLE IF NOT EXISTS otp_logs (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  type ENUM('send', 'verify') NOT NULL,
  status VARCHAR(50),
  ip VARCHAR(45),
  user_agent TEXT,
  timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- CONTACTS TABLE
CREATE TABLE IF NOT EXISTS contacts (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL,
  message TEXT NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- EMAIL THREADS TABLE
CREATE TABLE IF NOT EXISTS email_threads (
  id INT AUTO_INCREMENT PRIMARY KEY,
  subject TEXT,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
